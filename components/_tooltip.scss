/* ==========================================================================
   COMPONENTS / #TOOLTIP
   ========================================================================== */

// Tooltip Settings
$tooltip-width: 20em;
$tooltip-marker-size: 10px;
$tooltip-z-base: 50;

/* Base
  =========================================== */

/**
 * Tooltip
 *
 * Tooltip wrapper to contain content and trigger. Uses `before` pseudo for bubble
 * marker, and `after` for page whitewash.
 */
.c-tooltip {
  display: inline-block;
  position: relative;
}

.c-tooltip__content {
  display: none;
}

/* States
  =========================================== */

/**
 * `.is-active`
 * By default, Tooltips are triggered on click by toggling the `is-active`class.
 *
 * `c-tooltip--hover`
 * Tooltips can also be displayed on `:hover` of the trigger by applying the
 * `c-tooltip--hover` modifier to the component.
 */
.c-tooltip.is-active,
.c-tooltip--hover:hover {
  /**
   * Tooltip Indicator
   *
   * 1. Marker needs to sit above content, whitewash, and trigger
   * 2. Position marker centrally below trigger and above content
   * 3. Because marker is rotated, we need to double the size to give true size
   * 4. Marker needs it's own shadow with negative spread to only show on one side
   * 5. Subtle border to make marker more defined on white backgrounds
   */
  &::before {
    content: "";
    position: absolute;
    z-index: $tooltip-z-base+3; /* [1] */
    top: 100%; /* [2] */
    left: 50%; /* [2] */
    margin-left: -($tooltip-marker-size/2); /* [2] */
    width: $tooltip-marker-size*2; /* [3] */
    height: $tooltip-marker-size*2; /* [3] */
    transform: rotate(45deg);
    background-color: #fff;
    box-shadow: -2px -2px 14px -10px #000; /* [4] */
    border: 1px solid #eee; /* [5] */
    border-width: 1px 0 0 1px; /* [5] */
  }

  /**
   * Tooltip Trigger
   *
   * The trigger can be any element
   *
   * 1. Trigger is layered above whitewash but below marker
   */
  .c-tooltip__trigger {
    position: relative;
    z-index: $tooltip-z-base+2; /* [1] */
  }

  /**
   * Tooltip Content
   *
   * The bubble of content that appears when triggered
   *
   * 1. Layer above whitewash
   * 2. Position left aligned beneath the trigger
   * 3. On mobile we need full width; we have to use `calc` because the positioning
   *    context is relative to the tooltip itself, which isn't as wide as the container
   * 4. Take away the margin bottom on the last child, helps prevent unwanted paragraph
   *    margins
   */
  .c-tooltip__content {
    @include font-size(text-body-small);
    display: block;
    position: absolute;
    z-index: $tooltip-z-base+2; /* [1] */
    top: 100%; /* [2] */
    left: 0; /* [2] */
    padding: $global-spacing-unit-small;
    background-color: color(white);
    border-radius: $global-border-radius;
    box-shadow: $global-shadow;
    width: calc(100vw - #{$global-spacing-unit-large});  /* [3] */
    margin-top: $tooltip-marker-size;

    @include mq($from: medium) {
      width: $tooltip-width;
    }

    :last-child {
      margin-bottom: 0;
    }
  }
}

/**
 * `.is-active` Whitewash
 *
 * 1. Whitewash sits above the document but below the tooltip content & trigger
 *    and only on click based tooltips
 */
.c-tooltip.is-active {
  &::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    z-index: $tooltip-z-base+1; /* [1] */
    height: 100%;
    width: 100%;
    background-color: rgba(color(white), 0.85);
  }
}

/**
 * `c-tooltip--hover` "Bridge"
 *
 * Transparent pseudo element to increase surface area from trigger to content.
 */
.c-tooltip--hover:hover {
  &::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -$tooltip-marker-size;
    width: 100%;
    height: $tooltip-marker-size;
    background-color: transparent;
  }
}

/* Modifiers
  =========================================== */

/**
 * Right-aligned Tooltip
 *
 * Aligns the tooltip to the right. Used when the trigger is aligned to the
 * right of a page or container.
 */
.c-tooltip--right {
  &#{&} {
    .c-tooltip::after,
    .c-tooltip__content {
      left: auto;
      right: 0;
    }
  }
}
