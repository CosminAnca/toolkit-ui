/* ==========================================================================
   COMPONENTS / TILE
   ========================================================================== */

$tile-padding: $global-spacing-unit-small !default;
$tile-border-width: 6px !default;
$tile-outer-border-colour: rgba(255, 255, 255, 0.2) !default;
$tile-outer-border-width: $global-border-width !default;
$tile-animation-speed: $global-animation-speed;
$tile-animation-speed-slow: $global-animation-speed-slow;
$tile-shadow: $global-shadow !default;

$tile-arrow-color: #bebec1 !default;
$tile-arrow-size: $global-spacing-unit-small !default;

/**
 * The base of the tile; provides the glass "border" and shadow.
 *
 * Also provides selected state, which gives a triangle arrowhead marker between
 * The tile and it's panel.
 *
 * 1. Need to take off an extra pixel here to allow for browser rendering/
 * rounding quirks.
 * 2. Position tile marker below the centre of the tile
 * 3. Use borders and empty element to display a triangle
 */
.c-tile {
  position: relative;
  background: transparent;
  box-shadow: $tile-shadow;
  border: $tile-outer-border-width solid $tile-outer-border-colour;
  padding: $tile-border-width;
  margin-bottom: $global-spacing-unit;

  &.is-selected {
    // Arrow markers to signify panel relationship
    &::before {
      display: block;
      content: "";
      position: absolute;  /* [2] */
      bottom: -$global-spacing-unit - 1px; /* [1, 2] */
      left: 50%;  /* [2] */
      width: 0; /* [3] */
      height: 0; /* [3] */
      margin-left: -$tile-arrow-size/2; /* [2] */
      border-left: $tile-arrow-size solid transparent; /* [3] */
      border-right: $tile-arrow-size solid transparent; /* [3] */
      border-bottom: $tile-arrow-size solid $tile-arrow-color; /* [3] */
    }
  }

  &.c-tile--dark.is-selected::before {
    border-bottom-color: color(dark-ui);
  }
}

/**
 * The inner container of the tile provides the background gradient and extra
 * positioning for square tiles
 */
.c-tile__content {
  @include background-gradient("small", "radial");

  @include mq($from: medium) {
    .c-tile--square & {
      position: absolute;
      top: $tile-border-width;
      right: $tile-border-width;
      bottom: $tile-border-width;
      left: $tile-border-width;
      overflow: hidden; // Defensively clip overflowing text that can't be handled because of absolute positioning
    }
  }

  > :last-child {
    margin-bottom: 0;
  }

}

/**
 * The body/copy container for the tile; This should be applied to any content
 * which doesn't sit flush to the edge of the tile.
 */
.c-tile__body {
  padding: $tile-padding;

  > :last-child {
    margin-bottom: 0;
  }

}

/* Links
  =========================================== */

/**
 * Tiles can have links, just wrap the `.c-tile__content` with a `a.c-tile__link`
 * node.
 */
.c-tile__link {
  display: block;
  color: inherit;

  &,
  &:hover,
  &:focus {
    text-decoration: none;
  }
}

/* Media
  =========================================== */

/**
 * Container for tile media which takes the top 55% of the tile when used.
 * This usually (but not always) contains a .c-tile-poster.
 *
 * Media and caption pairs should only be used in conjunction with the
 * `c-tile--square` modifier
 */
.c-tile__media {
  display: none;

  @include mq($from: medium) {
    overflow: none;
    display: block;
    height: 55%;
  }
}

/**
 * A poster is a full bleed image which scales when the lniked tile is hovered.
 */
.c-tile__poster {
  transition: transform $tile-animation-speed-slow ease;

  .c-tile__link:hover & {
    transform: scale(1.05, 1.05);
  }
}

/**
 * Captions are needed for media tiles; they add a new background gradient and
 * take up the lower 50% of the tile.
 */
.c-tile__caption {
  @include background-gradient("small", "radial");

  position: relative;
  transition: background $tile-animation-speed ease;

  @include mq($from: medium) {
    height: 45%;
  }

  // Pseudo element used for hover state background
  &::before {
    @include background-gradient("large", "radial");

    content: "";
    opacity: 0;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transition: opacity $tile-animation-speed ease;

    .c-tile__link:hover & {
      opacity: 1;
    }
  }

}

/* Titles
  =========================================== */

/**
 * Large scalable title for large tiles (typically those used in >=50% widths)
 *
 * Normal heading classes e.g. `c-heading-alpha` are more useful in flexible
 * tiles, but square tiles need more specific and scalable headings in order to
 * prevent overflow â€“ hence the explicit font-size and line-height values rather
 * than the `@font-size mixin`.
 */
.c-tile__title {
  position: relative;
  font-size: $text-delta;
  line-height: 1.3;

  @include mq($from: medium) {
    font-size: 3.4vw;
  }

  @include mq($from: large) {
    font-size: $text-gamma;
  }
}

/**
 * Smaller static titles for smaller tiles (usually 33% widths)
 */
.c-tile__small-title {
  position: relative;
  font-size: $text-delta;
  line-height: 1.3;

  @include mq($from: medium) {
    font-size: $text-body;
  }
}

/* Square modifier
  =========================================== */

/**
 * Forces the tile to keep a square ratio
 */
.c-tile--square {
  @include mq($from: medium) {
    height: 0;
    padding-top: 100%;
  }
}
